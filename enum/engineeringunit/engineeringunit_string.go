// Code generated by "stringer -type=EngineeringUnit"; DO NOT EDIT.

package engineeringunit

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SquareMeters-0]
	_ = x[SquareFeet-1]
	_ = x[Milliamperes-2]
	_ = x[Amperes-3]
	_ = x[Ohms-4]
	_ = x[Volts-5]
	_ = x[Kilovolts-6]
	_ = x[Megavolts-7]
	_ = x[VoltAmperes-8]
	_ = x[KilovoltAmperes-9]
	_ = x[MegavoltAmperes-10]
	_ = x[VoltAmperesReactive-11]
	_ = x[KilovoltAmperesReactive-12]
	_ = x[MegavoltAmperesReactive-13]
	_ = x[DegreesPhase-14]
	_ = x[PowerFactor-15]
	_ = x[Joules-16]
	_ = x[Kilojoules-17]
	_ = x[WattHours-18]
	_ = x[KilowattHours-19]
	_ = x[Btus-20]
	_ = x[Therms-21]
	_ = x[TonHours-22]
	_ = x[JoulesPerKilogramDryAir-23]
	_ = x[BtusPerPoundDryAir-24]
	_ = x[CyclesPerHour-25]
	_ = x[CyclesPerMinute-26]
	_ = x[Hertz-27]
	_ = x[GramsOfWaterPerKilogramDryAir-28]
	_ = x[PercentRelativeHumidity-29]
	_ = x[Millimeters-30]
	_ = x[Meters-31]
	_ = x[Inches-32]
	_ = x[Feet-33]
	_ = x[WattsPerSquareFoot-34]
	_ = x[WattsPerSquareMeter-35]
	_ = x[Lumens-36]
	_ = x[Luxes-37]
	_ = x[FootCandles-38]
	_ = x[Kilograms-39]
	_ = x[PoundsMass-40]
	_ = x[Tons-41]
	_ = x[KilogramsPerSecond-42]
	_ = x[KilogramsPerMinute-43]
	_ = x[KilogramsPerHour-44]
	_ = x[PoundsMassPerMinute-45]
	_ = x[PoundsMassPerHour-46]
	_ = x[Watts-47]
	_ = x[Kilowatts-48]
	_ = x[Megawatts-49]
	_ = x[BtusPerHour-50]
	_ = x[Horsepower-51]
	_ = x[TonsRefrigeration-52]
	_ = x[Pascals-53]
	_ = x[Kilopascals-54]
	_ = x[Bars-55]
	_ = x[PoundsForcePerSquareInch-56]
	_ = x[CentimetersOfWater-57]
	_ = x[InchesOfWater-58]
	_ = x[MillimetersOfMercury-59]
	_ = x[CentimetersOfMercury-60]
	_ = x[InchesOfMercury-61]
	_ = x[DegreesCelsius-62]
	_ = x[DegreesKelvin-63]
	_ = x[DegreesFahrenheit-64]
	_ = x[DegreeDaysCelsius-65]
	_ = x[DegreeDaysFahrenheit-66]
	_ = x[Years-67]
	_ = x[Months-68]
	_ = x[Weeks-69]
	_ = x[Days-70]
	_ = x[Hours-71]
	_ = x[Minutes-72]
	_ = x[Seconds-73]
	_ = x[MetersPerSecond-74]
	_ = x[KilometersPerHour-75]
	_ = x[FeetPerSecond-76]
	_ = x[FeetPerMinute-77]
	_ = x[MilesPerHour-78]
	_ = x[CubicFeet-79]
	_ = x[CubicMeters-80]
	_ = x[ImperialGallons-81]
	_ = x[Liters-82]
	_ = x[UsGallons-83]
	_ = x[CubicFeetPerMinute-84]
	_ = x[CubicMetersPerSecond-85]
	_ = x[ImperialGallonsPerMinute-86]
	_ = x[LitersPerSecond-87]
	_ = x[LitersPerMinute-88]
	_ = x[UsGallonsPerMinute-89]
	_ = x[DegreesAngular-90]
	_ = x[DegreesCelsiusPerHour-91]
	_ = x[DegreesCelsiusPerMinute-92]
	_ = x[DegreesFahrenheitPerHour-93]
	_ = x[DegreesFahrenheitPerMinute-94]
	_ = x[NoUnits-95]
	_ = x[PartsPerMillion-96]
	_ = x[PartsPerBillion-97]
	_ = x[Percent-98]
	_ = x[PercentPerSecond-99]
	_ = x[PerMinute-100]
	_ = x[PerSecond-101]
	_ = x[PsiPerDegreeFahrenheit-102]
	_ = x[Radians-103]
	_ = x[RevolutionsPerMinute-104]
	_ = x[Currency1-105]
	_ = x[Currency2-106]
	_ = x[Currency3-107]
	_ = x[Currency4-108]
	_ = x[Currency5-109]
	_ = x[Currency6-110]
	_ = x[Currency7-111]
	_ = x[Currency8-112]
	_ = x[Currency9-113]
	_ = x[Currency10-114]
	_ = x[SquareInches-115]
	_ = x[SquareCentimeters-116]
	_ = x[BtusPerPound-117]
	_ = x[Centimeters-118]
	_ = x[PoundsMassPerSecond-119]
	_ = x[DeltaDegreesFahrenheit-120]
	_ = x[DeltaDegreesKelvin-121]
	_ = x[Kilohms-122]
	_ = x[Megohms-123]
	_ = x[Millivolts-124]
	_ = x[KilojoulesPerKilogram-125]
	_ = x[Megajoules-126]
	_ = x[JoulesPerDegreeKelvin-127]
	_ = x[JoulesPerKilogramDegreeKelvin-128]
	_ = x[Kilohertz-129]
	_ = x[Megahertz-130]
	_ = x[PerHour-131]
	_ = x[Milliwatts-132]
	_ = x[Hectopascals-133]
	_ = x[Millibars-134]
	_ = x[CubicMetersPerHour-135]
	_ = x[LitersPerHour-136]
	_ = x[KilowattHoursPerSquareMeter-137]
	_ = x[KilowattHoursPerSquareFoot-138]
	_ = x[MegajoulesPerSquareMeter-139]
	_ = x[MegajoulesPerSquareFoot-140]
	_ = x[WattsPerSquareMeterDegreeKelvin-141]
	_ = x[CubicFeetPerSecond-142]
	_ = x[PercentObscurationPerFoot-143]
	_ = x[PercentObscurationPerMeter-144]
	_ = x[Milliohms-145]
	_ = x[MegawattHours-146]
	_ = x[KiloBtus-147]
	_ = x[MegaBtus-148]
	_ = x[KilojoulesPerKilogramDryAir-149]
	_ = x[MegajoulesPerKilogramDryAir-150]
	_ = x[KilojoulesPerDegreeKelvin-151]
	_ = x[MegajoulesPerDegreeKelvin-152]
	_ = x[Newton-153]
	_ = x[GramsPerSecond-154]
	_ = x[GramsPerMinute-155]
	_ = x[TonsPerHour-156]
	_ = x[KiloBtusPerHour-157]
	_ = x[HundredthsSeconds-158]
	_ = x[Milliseconds-159]
	_ = x[NewtonMeters-160]
	_ = x[MillimetersPerSecond-161]
	_ = x[MillimetersPerMinute-162]
	_ = x[MetersPerMinute-163]
	_ = x[MetersPerHour-164]
	_ = x[CubicMetersPerMinute-165]
	_ = x[MetersPerSecondPerSecond-166]
	_ = x[AmperesPerMeter-167]
	_ = x[AmperesPerSquareMeter-168]
	_ = x[AmpereSquareMeters-169]
	_ = x[Farads-170]
	_ = x[Henrys-171]
	_ = x[OhmMeters-172]
	_ = x[Siemens-173]
	_ = x[SiemensPerMeter-174]
	_ = x[Teslas-175]
	_ = x[VoltsPerDegreeKelvin-176]
	_ = x[VoltsPerMeter-177]
	_ = x[Webers-178]
	_ = x[Candelas-179]
	_ = x[CandelasPerSquareMeter-180]
	_ = x[DegreesKelvinPerHour-181]
	_ = x[DegreesKelvinPerMinute-182]
	_ = x[JouleSeconds-183]
	_ = x[RadiansPerSecond-184]
	_ = x[SquareMetersPerNewton-185]
	_ = x[KilogramsPerCubicMeter-186]
	_ = x[NewtonSeconds-187]
	_ = x[NewtonsPerMeter-188]
	_ = x[WattsPerMeterPerDegreeKelvin-189]
	_ = x[MicroSiemens-190]
	_ = x[CubicFeetPerHour-191]
	_ = x[UsGallonsPerHour-192]
	_ = x[Kilometers-193]
	_ = x[Micrometers-194]
	_ = x[Grams-195]
	_ = x[Milligrams-196]
	_ = x[Milliliters-197]
	_ = x[MillilitersPerSecond-198]
	_ = x[Decibels-199]
	_ = x[DecibelsMillivolt-200]
	_ = x[DecibelsVolt-201]
	_ = x[Millisiemens-202]
	_ = x[WattHoursReactive-203]
	_ = x[KilowattHoursReactive-204]
	_ = x[MegawattHoursReactive-205]
	_ = x[MillimetersOfWater-206]
	_ = x[PerMille-207]
	_ = x[GramsPerGram-208]
	_ = x[KilogramsPerKilogram-209]
	_ = x[GramsPerKilogram-210]
	_ = x[MilligramsPerGram-211]
	_ = x[MilligramsPerKilogram-212]
	_ = x[GramsPerMilliliter-213]
	_ = x[GramsPerLiter-214]
	_ = x[MilligramsPerLiter-215]
	_ = x[MicrogramsPerLiter-216]
	_ = x[GramsPerCubicMeter-217]
	_ = x[MilligramsPerCubicMeter-218]
	_ = x[MicrogramsPerCubicMeter-219]
	_ = x[NanogramsPerCubicMeter-220]
	_ = x[GramsPerCubicCentimeter-221]
	_ = x[Becquerels-222]
	_ = x[Kilobecquerels-223]
	_ = x[Megabecquerels-224]
	_ = x[Gray-225]
	_ = x[Milligray-226]
	_ = x[Microgray-227]
	_ = x[Sieverts-228]
	_ = x[Millisieverts-229]
	_ = x[Microsieverts-230]
	_ = x[MicrosievertsPerHour-231]
	_ = x[DecibelsA-232]
	_ = x[NephelometricTurbidityUnit-233]
	_ = x[PH-234]
	_ = x[GramsPerSquareMeter-235]
	_ = x[MinutesPerDegreeKelvin-236]
	_ = x[OhmMeterSquaredPerMeter-237]
	_ = x[AmpereSeconds-238]
	_ = x[VoltAmpereHours-239]
	_ = x[KilovoltAmpereHours-240]
	_ = x[MegavoltAmpereHours-241]
	_ = x[VoltAmpereHoursReactive-242]
	_ = x[KilovoltAmpereHoursReactive-243]
	_ = x[MegavoltAmpereHoursReactive-244]
	_ = x[VoltSquareHours-245]
	_ = x[AmpereSquareHours-246]
	_ = x[JoulePerHours-247]
	_ = x[CubicFeetPerDay-248]
	_ = x[CubicMetersPerDay-249]
	_ = x[WattHoursPerCubicMeter-250]
	_ = x[JoulesPerCubicMeter-251]
	_ = x[MolePercent-252]
	_ = x[PascalSeconds-253]
	_ = x[MillionStandardCubicFeetPerMinute-254]
	_ = x[StandardCubicFeetPerDay-47808]
	_ = x[MillionStandardCubicFeetPerDay-47809]
	_ = x[ThousandCubicFeetPerDay-47810]
	_ = x[ThousandStandardCubicFeetPerDay-47811]
	_ = x[PoundsMassPerDay-47812]
	_ = x[Millirems-47814]
	_ = x[MilliremsPerHour-47815]
	_ = x[DegreesLovibond-47816]
	_ = x[AlcoholByVolume-47817]
	_ = x[InternationalBitteringUnits-47818]
	_ = x[EuropeanBitternessUnits-47819]
	_ = x[DegreesPlato-47820]
	_ = x[SpecificGravity-47821]
	_ = x[EuropeanBrewingConvention-47822]
}

const (
	_EngineeringUnit_name_0 = "SquareMetersSquareFeetMilliamperesAmperesOhmsVoltsKilovoltsMegavoltsVoltAmperesKilovoltAmperesMegavoltAmperesVoltAmperesReactiveKilovoltAmperesReactiveMegavoltAmperesReactiveDegreesPhasePowerFactorJoulesKilojoulesWattHoursKilowattHoursBtusThermsTonHoursJoulesPerKilogramDryAirBtusPerPoundDryAirCyclesPerHourCyclesPerMinuteHertzGramsOfWaterPerKilogramDryAirPercentRelativeHumidityMillimetersMetersInchesFeetWattsPerSquareFootWattsPerSquareMeterLumensLuxesFootCandlesKilogramsPoundsMassTonsKilogramsPerSecondKilogramsPerMinuteKilogramsPerHourPoundsMassPerMinutePoundsMassPerHourWattsKilowattsMegawattsBtusPerHourHorsepowerTonsRefrigerationPascalsKilopascalsBarsPoundsForcePerSquareInchCentimetersOfWaterInchesOfWaterMillimetersOfMercuryCentimetersOfMercuryInchesOfMercuryDegreesCelsiusDegreesKelvinDegreesFahrenheitDegreeDaysCelsiusDegreeDaysFahrenheitYearsMonthsWeeksDaysHoursMinutesSecondsMetersPerSecondKilometersPerHourFeetPerSecondFeetPerMinuteMilesPerHourCubicFeetCubicMetersImperialGallonsLitersUsGallonsCubicFeetPerMinuteCubicMetersPerSecondImperialGallonsPerMinuteLitersPerSecondLitersPerMinuteUsGallonsPerMinuteDegreesAngularDegreesCelsiusPerHourDegreesCelsiusPerMinuteDegreesFahrenheitPerHourDegreesFahrenheitPerMinuteNoUnitsPartsPerMillionPartsPerBillionPercentPercentPerSecondPerMinutePerSecondPsiPerDegreeFahrenheitRadiansRevolutionsPerMinuteCurrency1Currency2Currency3Currency4Currency5Currency6Currency7Currency8Currency9Currency10SquareInchesSquareCentimetersBtusPerPoundCentimetersPoundsMassPerSecondDeltaDegreesFahrenheitDeltaDegreesKelvinKilohmsMegohmsMillivoltsKilojoulesPerKilogramMegajoulesJoulesPerDegreeKelvinJoulesPerKilogramDegreeKelvinKilohertzMegahertzPerHourMilliwattsHectopascalsMillibarsCubicMetersPerHourLitersPerHourKilowattHoursPerSquareMeterKilowattHoursPerSquareFootMegajoulesPerSquareMeterMegajoulesPerSquareFootWattsPerSquareMeterDegreeKelvinCubicFeetPerSecondPercentObscurationPerFootPercentObscurationPerMeterMilliohmsMegawattHoursKiloBtusMegaBtusKilojoulesPerKilogramDryAirMegajoulesPerKilogramDryAirKilojoulesPerDegreeKelvinMegajoulesPerDegreeKelvinNewtonGramsPerSecondGramsPerMinuteTonsPerHourKiloBtusPerHourHundredthsSecondsMillisecondsNewtonMetersMillimetersPerSecondMillimetersPerMinuteMetersPerMinuteMetersPerHourCubicMetersPerMinuteMetersPerSecondPerSecondAmperesPerMeterAmperesPerSquareMeterAmpereSquareMetersFaradsHenrysOhmMetersSiemensSiemensPerMeterTeslasVoltsPerDegreeKelvinVoltsPerMeterWebersCandelasCandelasPerSquareMeterDegreesKelvinPerHourDegreesKelvinPerMinuteJouleSecondsRadiansPerSecondSquareMetersPerNewtonKilogramsPerCubicMeterNewtonSecondsNewtonsPerMeterWattsPerMeterPerDegreeKelvinMicroSiemensCubicFeetPerHourUsGallonsPerHourKilometersMicrometersGramsMilligramsMillilitersMillilitersPerSecondDecibelsDecibelsMillivoltDecibelsVoltMillisiemensWattHoursReactiveKilowattHoursReactiveMegawattHoursReactiveMillimetersOfWaterPerMilleGramsPerGramKilogramsPerKilogramGramsPerKilogramMilligramsPerGramMilligramsPerKilogramGramsPerMilliliterGramsPerLiterMilligramsPerLiterMicrogramsPerLiterGramsPerCubicMeterMilligramsPerCubicMeterMicrogramsPerCubicMeterNanogramsPerCubicMeterGramsPerCubicCentimeterBecquerelsKilobecquerelsMegabecquerelsGrayMilligrayMicrograySievertsMillisievertsMicrosievertsMicrosievertsPerHourDecibelsANephelometricTurbidityUnitPHGramsPerSquareMeterMinutesPerDegreeKelvinOhmMeterSquaredPerMeterAmpereSecondsVoltAmpereHoursKilovoltAmpereHoursMegavoltAmpereHoursVoltAmpereHoursReactiveKilovoltAmpereHoursReactiveMegavoltAmpereHoursReactiveVoltSquareHoursAmpereSquareHoursJoulePerHoursCubicFeetPerDayCubicMetersPerDayWattHoursPerCubicMeterJoulesPerCubicMeterMolePercentPascalSecondsMillionStandardCubicFeetPerMinute"
	_EngineeringUnit_name_1 = "StandardCubicFeetPerDayMillionStandardCubicFeetPerDayThousandCubicFeetPerDayThousandStandardCubicFeetPerDayPoundsMassPerDay"
	_EngineeringUnit_name_2 = "MilliremsMilliremsPerHourDegreesLovibondAlcoholByVolumeInternationalBitteringUnitsEuropeanBitternessUnitsDegreesPlatoSpecificGravityEuropeanBrewingConvention"
)

var (
	_EngineeringUnit_index_0 = [...]uint16{0, 12, 22, 34, 41, 45, 50, 59, 68, 79, 94, 109, 128, 151, 174, 186, 197, 203, 213, 222, 235, 239, 245, 253, 276, 294, 307, 322, 327, 356, 379, 390, 396, 402, 406, 424, 443, 449, 454, 465, 474, 484, 488, 506, 524, 540, 559, 576, 581, 590, 599, 610, 620, 637, 644, 655, 659, 683, 701, 714, 734, 754, 769, 783, 796, 813, 830, 850, 855, 861, 866, 870, 875, 882, 889, 904, 921, 934, 947, 959, 968, 979, 994, 1000, 1009, 1027, 1047, 1071, 1086, 1101, 1119, 1133, 1154, 1177, 1201, 1227, 1234, 1249, 1264, 1271, 1287, 1296, 1305, 1327, 1334, 1354, 1363, 1372, 1381, 1390, 1399, 1408, 1417, 1426, 1435, 1445, 1457, 1474, 1486, 1497, 1516, 1538, 1556, 1563, 1570, 1580, 1601, 1611, 1632, 1661, 1670, 1679, 1686, 1696, 1708, 1717, 1735, 1748, 1775, 1801, 1825, 1848, 1879, 1897, 1922, 1948, 1957, 1970, 1978, 1986, 2013, 2040, 2065, 2090, 2096, 2110, 2124, 2135, 2150, 2167, 2179, 2191, 2211, 2231, 2246, 2259, 2279, 2303, 2318, 2339, 2357, 2363, 2369, 2378, 2385, 2400, 2406, 2426, 2439, 2445, 2453, 2475, 2495, 2517, 2529, 2545, 2566, 2588, 2601, 2616, 2644, 2656, 2672, 2688, 2698, 2709, 2714, 2724, 2735, 2755, 2763, 2780, 2792, 2804, 2821, 2842, 2863, 2881, 2889, 2901, 2921, 2937, 2954, 2975, 2993, 3006, 3024, 3042, 3060, 3083, 3106, 3128, 3151, 3161, 3175, 3189, 3193, 3202, 3211, 3219, 3232, 3245, 3265, 3274, 3300, 3302, 3321, 3343, 3366, 3379, 3394, 3413, 3432, 3455, 3482, 3509, 3524, 3541, 3554, 3569, 3586, 3608, 3627, 3638, 3651, 3684}
	_EngineeringUnit_index_1 = [...]uint8{0, 23, 53, 76, 107, 123}
	_EngineeringUnit_index_2 = [...]uint8{0, 9, 25, 40, 55, 82, 105, 117, 132, 157}
)

func (i EngineeringUnit) String() string {
	switch {
	case i <= 254:
		return _EngineeringUnit_name_0[_EngineeringUnit_index_0[i]:_EngineeringUnit_index_0[i+1]]
	case 47808 <= i && i <= 47812:
		i -= 47808
		return _EngineeringUnit_name_1[_EngineeringUnit_index_1[i]:_EngineeringUnit_index_1[i+1]]
	case 47814 <= i && i <= 47822:
		i -= 47814
		return _EngineeringUnit_name_2[_EngineeringUnit_index_2[i]:_EngineeringUnit_index_2[i+1]]
	default:
		return "EngineeringUnit(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
